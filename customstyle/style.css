.blueborder {
  border-style: solid;
  border-color: #287ec7;
  padding: 10px;
}

.redborder {
  border-style: solid;
  border-color: #ff0000;
  padding: 10px;
}

.greenbox {
  background-color: #cfc;
  padding: 10px;
  border: 1px solid green;
}

.orangebox {
  background-color: #ffe4b5;
  padding: 10px;
  border: 1px solid #ff8c00;
}

.redbox {
  background-color: #ffe4e1;
  border: 1px solid #fa8072;
  display: block;
  padding: 10px;
}

.bluebox {
  background-color: #f0f8ff;
  border: 1px solid #87cefa;
  display: block;
  padding: 10px;
}

.yellowbox {
  background-color: #fffacd;
  border: 1px solid #ffff66;
  display: block;
  padding: 10px;
}

.redtext {
  color: red;
}

.bluetext {
  color: blue;
}

.orangetext {
  color: #ff791a;
}

.greentext {
  color: green;
}

.collapsible_code {
  font-size: 0.9em;
}
/* Style the button that is used to open and close the collapsible content */
.collapsible {
  background-color: var(--bganswer);
  color: var(--bgfontcolor);
  cursor: pointer;
  padding: 5px;
  border: none;
  text-align: left;
  outline: none;
  font-size: 0.9em;
  font-weight: bold;
  line-height: 20pt;
}

/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */
.active,
.collapsible:hover {
  background-color: var(--bganswerselect);
}

/* Style the collapsible content. Note: hidden by default */
.content_answer {
  padding: 0 10px;
  display: none;
  overflow: hidden;
  color: var(--bgfontcolor);
  background-color: var(--bganswer);
  font-size: 0.9em;
}

.stackedit__toc ul {
  padding: 0;
}
.stackedit__toc ul a {
  margin: 0rem 0;
  padding: 0rem 1rem;
}
.stackedit__toc ul ul {
  color: #888;
  font-size: 13px;
}
.stackedit__toc ul ul a {
  margin: 0;
  padding: 0.1rem 1rem;
}
.stackedit__toc li {
  display: block;
}
.stackedit__toc a {
  display: block;
  color: inherit;
  text-decoration: none;
}
.stackedit__toc a:active,
.stackedit__toc a:focus,
.stackedit__toc a:hover {
  background-color: rgba(0, 0, 0, 0.075);
  border-radius: 3px;
}

.grid {
  grid-template-columns: 1fr 1fr;
}

.stackedit__left {
  grid-column: 1;
  grid-row: 1;
  display: none;
  width: 250px;
  top: 5px;
  padding: 1.5rem 0rem;
  left: 0;
  overflow: visible;
  z-index: 100;
  font-family: "Helvetica Neue";
}
@media (min-width: 1060px) {
  .stackedit__left {
    display: block;
  }
}
/* .highlight pre { background-color: #272822; } */
/* .highlight .hll { background-color: #272822; } */
.highlight .c {
  color: #75715e;
} /* Comment */
.highlight .err {
  color: #960050;
} /* Error */
.highlight .k {
  color: #66d9ef;
} /* Keyword */
.highlight .l {
  color: #ae81ff;
} /* Literal */
.highlight .n {
  color: #f8f8f2;
} /* Name */
.highlight .o {
  color: #f92672;
} /* Operator */
.highlight .p {
  color: #f8f8f2;
} /* Punctuation */
.highlight .cm {
  color: #75715e;
} /* Comment.Multiline */
.highlight .cp {
  color: #75715e;
} /* Comment.Preproc */
.highlight .c1 {
  color: #75715e;
} /* Comment.Single */
.highlight .cs {
  color: #75715e;
} /* Comment.Special */
.highlight .ge {
  font-style: italic;
} /* Generic.Emph */
.highlight .gs {
  font-weight: bold;
} /* Generic.Strong */
.highlight .kc {
  color: #66d9ef;
} /* Keyword.Constant */
.highlight .kd {
  color: #66d9ef;
} /* Keyword.Declaration */
.highlight .kn {
  color: #f92672;
} /* Keyword.Namespace */
.highlight .kp {
  color: #66d9ef;
} /* Keyword.Pseudo */
.highlight .kr {
  color: #66d9ef;
} /* Keyword.Reserved */
.highlight .kt {
  color: #66d9ef;
} /* Keyword.Type */
.highlight .ld {
  color: #e6db74;
} /* Literal.Date */
.highlight .m {
  color: #ae81ff;
} /* Literal.Number */
.highlight .s {
  color: #e6db74;
} /* Literal.String */
.highlight .na {
  color: #a6e22e;
} /* Name.Attribute */
.highlight .nb {
  color: #f8f8f2;
} /* Name.Builtin */
.highlight .nc {
  color: #a6e22e;
} /* Name.Class */
.highlight .no {
  color: #66d9ef;
} /* Name.Constant */
.highlight .nd {
  color: #a6e22e;
} /* Name.Decorator */
.highlight .ni {
  color: #f8f8f2;
} /* Name.Entity */
.highlight .ne {
  color: #a6e22e;
} /* Name.Exception */
.highlight .nf {
  color: #a6e22e;
} /* Name.Function */
.highlight .nl {
  color: #f8f8f2;
} /* Name.Label */
.highlight .nn {
  color: #f8f8f2;
} /* Name.Namespace */
.highlight .nx {
  color: #a6e22e;
} /* Name.Other */
.highlight .py {
  color: #f8f8f2;
} /* Name.Property */
.highlight .nt {
  color: #f92672;
} /* Name.Tag */
.highlight .nv {
  color: #f8f8f2;
} /* Name.Variable */
.highlight .ow {
  color: #f92672;
} /* Operator.Word */
.highlight .w {
  color: #f8f8f2;
} /* Text.Whitespace */
.highlight .mf {
  color: #ae81ff;
} /* Literal.Number.Float */
.highlight .mh {
  color: #ae81ff;
} /* Literal.Number.Hex */
.highlight .mi {
  color: #ae81ff;
} /* Literal.Number.Integer */
.highlight .mo {
  color: #ae81ff;
} /* Literal.Number.Oct */
.highlight .sb {
  color: #e6db74;
} /* Literal.String.Backtick */
.highlight .sc {
  color: #e6db74;
} /* Literal.String.Char */
.highlight .sd {
  color: #e6db74;
} /* Literal.String.Doc */
.highlight .s2 {
  color: #e6db74;
} /* Literal.String.Double */
.highlight .se {
  color: #ae81ff;
} /* Literal.String.Escape */
.highlight .sh {
  color: #e6db74;
} /* Literal.String.Heredoc */
.highlight .si {
  color: #e6db74;
} /* Literal.String.Interpol */
.highlight .sx {
  color: #e6db74;
} /* Literal.String.Other */
.highlight .sr {
  color: #e6db74;
} /* Literal.String.Regex */
.highlight .s1 {
  color: #e6db74;
} /* Literal.String.Single */
.highlight .ss {
  color: #e6db74;
} /* Literal.String.Symbol */
.highlight .bp {
  color: #f8f8f2;
} /* Name.Builtin.Pseudo */
.highlight .vc {
  color: #f8f8f2;
} /* Name.Variable.Class */
.highlight .vg {
  color: #f8f8f2;
} /* Name.Variable.Global */
.highlight .vi {
  color: #f8f8f2;
} /* Name.Variable.Instance */
.highlight .il {
  color: #ae81ff;
} /* Literal.Number.Integer.Long */

.highlight .gh {
} /* Generic Heading & Diff Header */
.highlight .gu {
  color: #75715e;
} /* Generic.Subheading & Diff Unified/Comment? */
.highlight .gd {
  color: #f92672;
} /* Generic.Deleted & Diff Deleted */
.highlight .gi {
  color: #a6e22e;
} /* Generic.Inserted & Diff Inserted */
